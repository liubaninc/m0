syntax = "proto3";
package liubaninc.m0.storage;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "storage/recrypt_account.proto";
import "storage/share_encrypt_storage.proto";
import "storage/encrypt_storage.proto";

option go_package = "github.com/liubaninc/m0/x/storage/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a recryptAccount by index.
	rpc RecryptAccount(QueryGetRecryptAccountRequest) returns (QueryGetRecryptAccountResponse) {
		option (google.api.http).get = "/liubaninc/m0/storage/recryptAccount/{index}";
	}

	// Queries a list of recryptAccount items.
	rpc RecryptAccountAll(QueryAllRecryptAccountRequest) returns (QueryAllRecryptAccountResponse) {
		option (google.api.http).get = "/liubaninc/m0/storage/recryptAccount";
	}


	// Queries a shareEncryptStorage by index.
	rpc ShareEncryptStorage(QueryGetShareEncryptStorageRequest) returns (QueryGetShareEncryptStorageResponse) {
		option (google.api.http).get = "/liubaninc/m0/storage/shareEncryptStorage/{index}";
	}

	// Queries a list of shareEncryptStorage items.
	rpc ShareEncryptStorageAll(QueryAllShareEncryptStorageRequest) returns (QueryAllShareEncryptStorageResponse) {
		option (google.api.http).get = "/liubaninc/m0/storage/shareEncryptStorage";
	}


	// Queries a encryptStorage by index.
	rpc EncryptStorage(QueryGetEncryptStorageRequest) returns (QueryGetEncryptStorageResponse) {
		option (google.api.http).get = "/liubaninc/m0/storage/encryptStorage/{index}";
	}

	// Queries a list of encryptStorage items.
	rpc EncryptStorageAll(QueryAllEncryptStorageRequest) returns (QueryAllEncryptStorageResponse) {
		option (google.api.http).get = "/liubaninc/m0/storage/encryptStorage";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetRecryptAccountRequest {
	string index = 1;
}

message QueryGetRecryptAccountResponse {
	RecryptAccount RecryptAccount = 1;
}

message QueryAllRecryptAccountRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRecryptAccountResponse {
	repeated RecryptAccount RecryptAccount = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetShareEncryptStorageRequest {
	string index = 1;
}

message QueryGetShareEncryptStorageResponse {
	ShareEncryptStorage ShareEncryptStorage = 1;
}

message QueryAllShareEncryptStorageRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllShareEncryptStorageResponse {
	repeated ShareEncryptStorage ShareEncryptStorage = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
message QueryGetEncryptStorageRequest {
	string index = 1;
}

message QueryGetEncryptStorageResponse {
	EncryptStorage EncryptStorage = 1;
}

message QueryAllEncryptStorageRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllEncryptStorageResponse {
	repeated EncryptStorage EncryptStorage = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
