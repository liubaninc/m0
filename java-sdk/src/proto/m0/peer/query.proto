syntax = "proto3";
package liubaninc.m0.peer;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
// this line is used by starport scaffolding # 1
import "m0/peer/peer_id.proto";

option go_package = "github.com/liubaninc/m0/x/peer/types";

// Query defines the gRPC querier service.
service Query {
    // this line is used by starport scaffolding # 2

	// Queries a peerID by index.
	rpc PeerID(QueryGetPeerIDRequest) returns (QueryGetPeerIDResponse) {
		option (google.api.http).get = "/liubaninc/m0/peer/peerID/{index}";
	}

	// Queries a list of peerID items.
	rpc PeerIDAll(QueryAllPeerIDRequest) returns (QueryAllPeerIDResponse) {
		option (google.api.http).get = "/liubaninc/m0/peer/peerID";
	}

}

// this line is used by starport scaffolding # 3
message QueryGetPeerIDRequest {
	string index = 1;
}

message QueryGetPeerIDResponse {
	PeerID PeerID = 1;
}

message QueryAllPeerIDRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllPeerIDResponse {
	repeated PeerID PeerID = 1;
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
