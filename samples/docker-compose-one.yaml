version: '2.4'

volumes:
  mytestnet:
  mysql:

networks:
  test:
    name: m0_test

services:
  m0-mysql:
    container_name: m0-mysql
    image: mysql:latest
    labels:
      service: tq-m0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=m0
      - MYSQL_ROOT_HOST=%
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - 3307:3306
    networks:
      - test

  # m0区块链
  m0-node0:
    container_name: m0-node0
    image: liubaninc/m0:${TAG}
    # restart: always
    labels:
      service: tq-m0
    environment:
      - M0_CHAIN_ID=testchain
      - M0_GENESIS_TIME=1615183366
      - M0_HOME=/var/tq/production/mytestnet/node0/.m0
      - M0_CONSENSUS_CREATE_EMPTY_BLOCKS=true
      - M0_P2P_LADDR=tcp://0.0.0.0:26656
      - M0_RPC_LADDR=tcp://0.0.0.0:26657
      - M0_LOG_LEVEL=main:info,state:info,*:error
      - M0_INSTRUMENTATION_PROMETHEUS=true
    command:
      - "sh"
      - "-c"
      - |
        set -ex
        if [ ! -e /var/tq/production/mytestnet/node0/.m0/config/genesis.json ]; then
        m0d testnet -n 1
        cp -r mytestnet/node0 /var/tq/production/mytestnet
        fi
        m0d start --pruning nothing --grpc.address 0.0.0.0:9090 --home /var/tq/production/mytestnet/node0/.m0
    volumes:
      - mytestnet:/var/tq/production/mytestnet
    ports:
      #- 26660:26660
      - 26656:26656
      - 26657:26657
    networks:
      - test

  # m0区块数据同步
  m0-synced:
    container_name: m0-synced
    image: liubaninc/m0:${TAG}
    restart: always
    labels:
      service: tq-m0
    environment:
      - M0_SYNCED_HOME=/var/tq/production/mytestnet/
      - M0_SYNCED_DB_HOST=m0-mysql
      - M0_SYNCED_NODE_RPC=tcp://m0-node0:26657
      - WAIT_HOSTS=m0-mysql:3306,m0-node0:26657
      - WAIT_HOSTS_TIMEOUT=300
      - WAIT_SLEEP_INTERVAL=30
      - WAIT_HOST_CONNECT_TIMEOUT=30
    command: 
      - "sh" 
      - "-c" 
      - "/wait && /synced.sh"
    volumes:
      - mytestnet:/var/tq/production/mytestnet
    depends_on:
      - m0-node0
      - m0-mysql
    ports:
      - 8080:8080
      - 8085:8085
      - 8086:8086
    networks:
      - test