// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: wasm/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/liubaninc/m0/x/utxo/types"
	xmodel "github.com/liubaninc/m0/x/wasm/xmodel"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgApproveDeployContract struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Index   string `protobuf:"bytes,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (m *MsgApproveDeployContract) Reset()         { *m = MsgApproveDeployContract{} }
func (m *MsgApproveDeployContract) String() string { return proto.CompactTextString(m) }
func (*MsgApproveDeployContract) ProtoMessage()    {}
func (*MsgApproveDeployContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{0}
}
func (m *MsgApproveDeployContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveDeployContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveDeployContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveDeployContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveDeployContract.Merge(m, src)
}
func (m *MsgApproveDeployContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveDeployContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveDeployContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveDeployContract proto.InternalMessageInfo

func (m *MsgApproveDeployContract) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgApproveDeployContract) GetIndex() string {
	if m != nil {
		return m.Index
	}
	return ""
}

type MsgApproveDeployContractResponse struct {
}

func (m *MsgApproveDeployContractResponse) Reset()         { *m = MsgApproveDeployContractResponse{} }
func (m *MsgApproveDeployContractResponse) String() string { return proto.CompactTextString(m) }
func (*MsgApproveDeployContractResponse) ProtoMessage()    {}
func (*MsgApproveDeployContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{1}
}
func (m *MsgApproveDeployContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgApproveDeployContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgApproveDeployContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgApproveDeployContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgApproveDeployContractResponse.Merge(m, src)
}
func (m *MsgApproveDeployContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgApproveDeployContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgApproveDeployContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgApproveDeployContractResponse proto.InternalMessageInfo

type MsgProposeDeployContract struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractName string   `protobuf:"bytes,2,opt,name=contractName,proto3" json:"contractName,omitempty"`
	ContractCode []byte   `protobuf:"bytes,3,opt,name=contractCode,proto3" json:"contractCode,omitempty"`
	InitArgs     string   `protobuf:"bytes,4,opt,name=initArgs,proto3" json:"initArgs,omitempty"`
	Approval     []string `protobuf:"bytes,5,rep,name=approval,proto3" json:"approval,omitempty"`
}

func (m *MsgProposeDeployContract) Reset()         { *m = MsgProposeDeployContract{} }
func (m *MsgProposeDeployContract) String() string { return proto.CompactTextString(m) }
func (*MsgProposeDeployContract) ProtoMessage()    {}
func (*MsgProposeDeployContract) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{2}
}
func (m *MsgProposeDeployContract) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProposeDeployContract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProposeDeployContract.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProposeDeployContract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProposeDeployContract.Merge(m, src)
}
func (m *MsgProposeDeployContract) XXX_Size() int {
	return m.Size()
}
func (m *MsgProposeDeployContract) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProposeDeployContract.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProposeDeployContract proto.InternalMessageInfo

func (m *MsgProposeDeployContract) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgProposeDeployContract) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

func (m *MsgProposeDeployContract) GetContractCode() []byte {
	if m != nil {
		return m.ContractCode
	}
	return nil
}

func (m *MsgProposeDeployContract) GetInitArgs() string {
	if m != nil {
		return m.InitArgs
	}
	return ""
}

func (m *MsgProposeDeployContract) GetApproval() []string {
	if m != nil {
		return m.Approval
	}
	return nil
}

type MsgProposeDeployContractResponse struct {
}

func (m *MsgProposeDeployContractResponse) Reset()         { *m = MsgProposeDeployContractResponse{} }
func (m *MsgProposeDeployContractResponse) String() string { return proto.CompactTextString(m) }
func (*MsgProposeDeployContractResponse) ProtoMessage()    {}
func (*MsgProposeDeployContractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{3}
}
func (m *MsgProposeDeployContractResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgProposeDeployContractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgProposeDeployContractResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgProposeDeployContractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgProposeDeployContractResponse.Merge(m, src)
}
func (m *MsgProposeDeployContractResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgProposeDeployContractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgProposeDeployContractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgProposeDeployContractResponse proto.InternalMessageInfo

type MsgUndeploy struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractName string `protobuf:"bytes,2,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
}

func (m *MsgUndeploy) Reset()         { *m = MsgUndeploy{} }
func (m *MsgUndeploy) String() string { return proto.CompactTextString(m) }
func (*MsgUndeploy) ProtoMessage()    {}
func (*MsgUndeploy) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{4}
}
func (m *MsgUndeploy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndeploy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndeploy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndeploy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndeploy.Merge(m, src)
}
func (m *MsgUndeploy) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndeploy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndeploy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndeploy proto.InternalMessageInfo

func (m *MsgUndeploy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUndeploy) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

type MsgUndeployResponse struct {
}

func (m *MsgUndeployResponse) Reset()         { *m = MsgUndeployResponse{} }
func (m *MsgUndeployResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUndeployResponse) ProtoMessage()    {}
func (*MsgUndeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{5}
}
func (m *MsgUndeployResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUndeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUndeployResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUndeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUndeployResponse.Merge(m, src)
}
func (m *MsgUndeployResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUndeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUndeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUndeployResponse proto.InternalMessageInfo

type MsgUnfreeze struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractName string `protobuf:"bytes,2,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
}

func (m *MsgUnfreeze) Reset()         { *m = MsgUnfreeze{} }
func (m *MsgUnfreeze) String() string { return proto.CompactTextString(m) }
func (*MsgUnfreeze) ProtoMessage()    {}
func (*MsgUnfreeze) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{6}
}
func (m *MsgUnfreeze) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnfreeze) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnfreeze.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnfreeze) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnfreeze.Merge(m, src)
}
func (m *MsgUnfreeze) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnfreeze) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnfreeze.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnfreeze proto.InternalMessageInfo

func (m *MsgUnfreeze) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUnfreeze) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

type MsgUnfreezeResponse struct {
}

func (m *MsgUnfreezeResponse) Reset()         { *m = MsgUnfreezeResponse{} }
func (m *MsgUnfreezeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnfreezeResponse) ProtoMessage()    {}
func (*MsgUnfreezeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{7}
}
func (m *MsgUnfreezeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnfreezeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnfreezeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnfreezeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnfreezeResponse.Merge(m, src)
}
func (m *MsgUnfreezeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnfreezeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnfreezeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnfreezeResponse proto.InternalMessageInfo

type MsgFreeze struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractName string `protobuf:"bytes,2,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
}

func (m *MsgFreeze) Reset()         { *m = MsgFreeze{} }
func (m *MsgFreeze) String() string { return proto.CompactTextString(m) }
func (*MsgFreeze) ProtoMessage()    {}
func (*MsgFreeze) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{8}
}
func (m *MsgFreeze) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFreeze) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFreeze.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFreeze) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFreeze.Merge(m, src)
}
func (m *MsgFreeze) XXX_Size() int {
	return m.Size()
}
func (m *MsgFreeze) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFreeze.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFreeze proto.InternalMessageInfo

func (m *MsgFreeze) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgFreeze) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

type MsgFreezeResponse struct {
}

func (m *MsgFreezeResponse) Reset()         { *m = MsgFreezeResponse{} }
func (m *MsgFreezeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgFreezeResponse) ProtoMessage()    {}
func (*MsgFreezeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{9}
}
func (m *MsgFreezeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgFreezeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgFreezeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgFreezeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgFreezeResponse.Merge(m, src)
}
func (m *MsgFreezeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgFreezeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgFreezeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgFreezeResponse proto.InternalMessageInfo

type MsgDeploy struct {
	Creator        string                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Desc           string                  `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Inputs         []*types.Input          `protobuf:"bytes,20,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs        []*types.Output         `protobuf:"bytes,21,rep,name=outputs,proto3" json:"outputs,omitempty"`
	InputsExt      []*InputExt             `protobuf:"bytes,22,rep,name=inputs_ext,json=inputsExt,proto3" json:"inputs_ext,omitempty"`
	OutputsExt     []*OutputExt            `protobuf:"bytes,23,rep,name=outputs_ext,json=outputsExt,proto3" json:"outputs_ext,omitempty"`
	ContractName   string                  `protobuf:"bytes,24,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	ContractCode   []byte                  `protobuf:"bytes,25,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`
	ContractDesc   *xmodel.WasmCodeDesc    `protobuf:"bytes,26,opt,name=contract_desc,json=contractDesc,proto3" json:"contract_desc,omitempty"`
	Args           string                  `protobuf:"bytes,28,opt,name=args,proto3" json:"args,omitempty"`
	ResourceLimits []*xmodel.ResourceLimit `protobuf:"bytes,30,rep,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
}

func (m *MsgDeploy) Reset()         { *m = MsgDeploy{} }
func (m *MsgDeploy) String() string { return proto.CompactTextString(m) }
func (*MsgDeploy) ProtoMessage()    {}
func (*MsgDeploy) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{10}
}
func (m *MsgDeploy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeploy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeploy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeploy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeploy.Merge(m, src)
}
func (m *MsgDeploy) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeploy) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeploy.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeploy proto.InternalMessageInfo

func (m *MsgDeploy) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeploy) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MsgDeploy) GetInputs() []*types.Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *MsgDeploy) GetOutputs() []*types.Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *MsgDeploy) GetInputsExt() []*InputExt {
	if m != nil {
		return m.InputsExt
	}
	return nil
}

func (m *MsgDeploy) GetOutputsExt() []*OutputExt {
	if m != nil {
		return m.OutputsExt
	}
	return nil
}

func (m *MsgDeploy) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

func (m *MsgDeploy) GetContractCode() []byte {
	if m != nil {
		return m.ContractCode
	}
	return nil
}

func (m *MsgDeploy) GetContractDesc() *xmodel.WasmCodeDesc {
	if m != nil {
		return m.ContractDesc
	}
	return nil
}

func (m *MsgDeploy) GetArgs() string {
	if m != nil {
		return m.Args
	}
	return ""
}

func (m *MsgDeploy) GetResourceLimits() []*xmodel.ResourceLimit {
	if m != nil {
		return m.ResourceLimits
	}
	return nil
}

type MsgDeployResponse struct {
}

func (m *MsgDeployResponse) Reset()         { *m = MsgDeployResponse{} }
func (m *MsgDeployResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeployResponse) ProtoMessage()    {}
func (*MsgDeployResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{11}
}
func (m *MsgDeployResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeployResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeployResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeployResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeployResponse.Merge(m, src)
}
func (m *MsgDeployResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeployResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeployResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeployResponse proto.InternalMessageInfo

type MsgUpgrade struct {
	Creator        string                  `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Desc           string                  `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Inputs         []*types.Input          `protobuf:"bytes,20,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs        []*types.Output         `protobuf:"bytes,21,rep,name=outputs,proto3" json:"outputs,omitempty"`
	InputsExt      []*InputExt             `protobuf:"bytes,22,rep,name=inputs_ext,json=inputsExt,proto3" json:"inputs_ext,omitempty"`
	OutputsExt     []*OutputExt            `protobuf:"bytes,23,rep,name=outputs_ext,json=outputsExt,proto3" json:"outputs_ext,omitempty"`
	ContractName   string                  `protobuf:"bytes,24,opt,name=contract_name,json=contractName,proto3" json:"contract_name,omitempty"`
	ContractCode   []byte                  `protobuf:"bytes,25,opt,name=contract_code,json=contractCode,proto3" json:"contract_code,omitempty"`
	ResourceLimits []*xmodel.ResourceLimit `protobuf:"bytes,30,rep,name=resource_limits,json=resourceLimits,proto3" json:"resource_limits,omitempty"`
}

func (m *MsgUpgrade) Reset()         { *m = MsgUpgrade{} }
func (m *MsgUpgrade) String() string { return proto.CompactTextString(m) }
func (*MsgUpgrade) ProtoMessage()    {}
func (*MsgUpgrade) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{12}
}
func (m *MsgUpgrade) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpgrade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpgrade.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpgrade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpgrade.Merge(m, src)
}
func (m *MsgUpgrade) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpgrade) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpgrade.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpgrade proto.InternalMessageInfo

func (m *MsgUpgrade) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpgrade) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MsgUpgrade) GetInputs() []*types.Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *MsgUpgrade) GetOutputs() []*types.Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *MsgUpgrade) GetInputsExt() []*InputExt {
	if m != nil {
		return m.InputsExt
	}
	return nil
}

func (m *MsgUpgrade) GetOutputsExt() []*OutputExt {
	if m != nil {
		return m.OutputsExt
	}
	return nil
}

func (m *MsgUpgrade) GetContractName() string {
	if m != nil {
		return m.ContractName
	}
	return ""
}

func (m *MsgUpgrade) GetContractCode() []byte {
	if m != nil {
		return m.ContractCode
	}
	return nil
}

func (m *MsgUpgrade) GetResourceLimits() []*xmodel.ResourceLimit {
	if m != nil {
		return m.ResourceLimits
	}
	return nil
}

type MsgUpgradeResponse struct {
}

func (m *MsgUpgradeResponse) Reset()         { *m = MsgUpgradeResponse{} }
func (m *MsgUpgradeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpgradeResponse) ProtoMessage()    {}
func (*MsgUpgradeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{13}
}
func (m *MsgUpgradeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpgradeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpgradeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpgradeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpgradeResponse.Merge(m, src)
}
func (m *MsgUpgradeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpgradeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpgradeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpgradeResponse proto.InternalMessageInfo

type MsgInvoke struct {
	Creator          string           `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Desc             string           `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Inputs           []*types.Input   `protobuf:"bytes,20,rep,name=inputs,proto3" json:"inputs,omitempty"`
	Outputs          []*types.Output  `protobuf:"bytes,21,rep,name=outputs,proto3" json:"outputs,omitempty"`
	InputsExt        []*InputExt      `protobuf:"bytes,22,rep,name=inputs_ext,json=inputsExt,proto3" json:"inputs_ext,omitempty"`
	OutputsExt       []*OutputExt     `protobuf:"bytes,23,rep,name=outputs_ext,json=outputsExt,proto3" json:"outputs_ext,omitempty"`
	ContractRequests []*InvokeRequest `protobuf:"bytes,24,rep,name=contract_requests,json=contractRequests,proto3" json:"contract_requests,omitempty"`
}

func (m *MsgInvoke) Reset()         { *m = MsgInvoke{} }
func (m *MsgInvoke) String() string { return proto.CompactTextString(m) }
func (*MsgInvoke) ProtoMessage()    {}
func (*MsgInvoke) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{14}
}
func (m *MsgInvoke) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInvoke) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInvoke.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInvoke) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInvoke.Merge(m, src)
}
func (m *MsgInvoke) XXX_Size() int {
	return m.Size()
}
func (m *MsgInvoke) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInvoke.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInvoke proto.InternalMessageInfo

func (m *MsgInvoke) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInvoke) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *MsgInvoke) GetInputs() []*types.Input {
	if m != nil {
		return m.Inputs
	}
	return nil
}

func (m *MsgInvoke) GetOutputs() []*types.Output {
	if m != nil {
		return m.Outputs
	}
	return nil
}

func (m *MsgInvoke) GetInputsExt() []*InputExt {
	if m != nil {
		return m.InputsExt
	}
	return nil
}

func (m *MsgInvoke) GetOutputsExt() []*OutputExt {
	if m != nil {
		return m.OutputsExt
	}
	return nil
}

func (m *MsgInvoke) GetContractRequests() []*InvokeRequest {
	if m != nil {
		return m.ContractRequests
	}
	return nil
}

type MsgInvokeResponse struct {
}

func (m *MsgInvokeResponse) Reset()         { *m = MsgInvokeResponse{} }
func (m *MsgInvokeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInvokeResponse) ProtoMessage()    {}
func (*MsgInvokeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_717525f8b4af777b, []int{15}
}
func (m *MsgInvokeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInvokeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInvokeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInvokeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInvokeResponse.Merge(m, src)
}
func (m *MsgInvokeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInvokeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInvokeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInvokeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgApproveDeployContract)(nil), "liubaninc.m0.wasm.MsgApproveDeployContract")
	proto.RegisterType((*MsgApproveDeployContractResponse)(nil), "liubaninc.m0.wasm.MsgApproveDeployContractResponse")
	proto.RegisterType((*MsgProposeDeployContract)(nil), "liubaninc.m0.wasm.MsgProposeDeployContract")
	proto.RegisterType((*MsgProposeDeployContractResponse)(nil), "liubaninc.m0.wasm.MsgProposeDeployContractResponse")
	proto.RegisterType((*MsgUndeploy)(nil), "liubaninc.m0.wasm.MsgUndeploy")
	proto.RegisterType((*MsgUndeployResponse)(nil), "liubaninc.m0.wasm.MsgUndeployResponse")
	proto.RegisterType((*MsgUnfreeze)(nil), "liubaninc.m0.wasm.MsgUnfreeze")
	proto.RegisterType((*MsgUnfreezeResponse)(nil), "liubaninc.m0.wasm.MsgUnfreezeResponse")
	proto.RegisterType((*MsgFreeze)(nil), "liubaninc.m0.wasm.MsgFreeze")
	proto.RegisterType((*MsgFreezeResponse)(nil), "liubaninc.m0.wasm.MsgFreezeResponse")
	proto.RegisterType((*MsgDeploy)(nil), "liubaninc.m0.wasm.MsgDeploy")
	proto.RegisterType((*MsgDeployResponse)(nil), "liubaninc.m0.wasm.MsgDeployResponse")
	proto.RegisterType((*MsgUpgrade)(nil), "liubaninc.m0.wasm.MsgUpgrade")
	proto.RegisterType((*MsgUpgradeResponse)(nil), "liubaninc.m0.wasm.MsgUpgradeResponse")
	proto.RegisterType((*MsgInvoke)(nil), "liubaninc.m0.wasm.MsgInvoke")
	proto.RegisterType((*MsgInvokeResponse)(nil), "liubaninc.m0.wasm.MsgInvokeResponse")
}

func init() { proto.RegisterFile("wasm/tx.proto", fileDescriptor_717525f8b4af777b) }

var fileDescriptor_717525f8b4af777b = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x56, 0x5f, 0x4f, 0xd4, 0x4a,
	0x14, 0xa7, 0x2c, 0x7f, 0xcf, 0x02, 0x17, 0x06, 0xb8, 0x77, 0xe8, 0xe5, 0x36, 0x7b, 0x57, 0x34,
	0x9b, 0x98, 0xec, 0x12, 0x78, 0x33, 0xd1, 0x04, 0x59, 0x48, 0x40, 0x56, 0x4c, 0x13, 0x63, 0xe2,
	0x0b, 0x29, 0xdd, 0x71, 0x6d, 0xdc, 0x76, 0x6a, 0x67, 0x16, 0x8b, 0x1f, 0xc2, 0xf8, 0x5d, 0xf4,
	0x43, 0xf8, 0xc8, 0xa3, 0x4f, 0xc6, 0xc0, 0x9b, 0x9f, 0xc2, 0xcc, 0x9f, 0x96, 0x56, 0xda, 0x55,
	0x13, 0x7c, 0xe3, 0x69, 0xf7, 0xcc, 0xf9, 0x9d, 0xdf, 0xef, 0xcc, 0x9c, 0x33, 0x73, 0x0a, 0xb3,
	0x6f, 0x1c, 0xe6, 0xb7, 0x78, 0xdc, 0x0c, 0x23, 0xca, 0x29, 0x5a, 0xe8, 0x7b, 0x83, 0x63, 0x27,
	0xf0, 0x02, 0xb7, 0xe9, 0xaf, 0x37, 0x85, 0xcf, 0x5c, 0x8c, 0x7d, 0xda, 0x25, 0xfd, 0x96, 0xfa,
	0x51, 0x38, 0x73, 0x7e, 0xc0, 0x63, 0xda, 0xf2, 0x82, 0x70, 0xc0, 0xf5, 0xca, 0x9c, 0x24, 0x22,
	0xb1, 0xb6, 0xeb, 0xfb, 0x80, 0x3b, 0xac, 0xb7, 0x15, 0x86, 0x11, 0x3d, 0x21, 0x6d, 0x12, 0xf6,
	0xe9, 0xe9, 0x36, 0x0d, 0x78, 0xe4, 0xb8, 0x1c, 0x61, 0x98, 0x74, 0x23, 0xe2, 0x70, 0x1a, 0x61,
	0xa3, 0x66, 0x34, 0xa6, 0xed, 0xc4, 0x44, 0x4b, 0x30, 0xee, 0x05, 0x5d, 0x12, 0xe3, 0x51, 0xb9,
	0xae, 0x8c, 0x7a, 0x1d, 0x6a, 0x65, 0x5c, 0x36, 0x61, 0x21, 0x0d, 0x18, 0xa9, 0x7f, 0x34, 0xa4,
	0xe0, 0x93, 0x88, 0x86, 0x94, 0xfd, 0xba, 0x60, 0x1d, 0x66, 0x5c, 0x8d, 0x7a, 0xec, 0xf8, 0x44,
	0xeb, 0xe6, 0xd6, 0xb2, 0x98, 0x6d, 0xda, 0x25, 0xb8, 0x52, 0x33, 0x1a, 0x33, 0x76, 0x6e, 0x0d,
	0x99, 0x30, 0xe5, 0x05, 0x1e, 0xdf, 0x8a, 0x7a, 0x0c, 0x8f, 0x49, 0x8e, 0xd4, 0x16, 0x3e, 0x47,
	0xe6, 0xee, 0xf4, 0xf1, 0x78, 0xad, 0x22, 0x7c, 0x89, 0xad, 0xb7, 0x56, 0x98, 0x75, 0xba, 0xb5,
	0x03, 0xa8, 0x76, 0x58, 0xef, 0x69, 0xd0, 0x95, 0xee, 0x21, 0x9b, 0xb9, 0x05, 0xb3, 0x49, 0x52,
	0x47, 0x41, 0xc9, 0x6e, 0xea, 0xcb, 0xb0, 0x98, 0x61, 0xbb, 0x22, 0xf2, 0x22, 0x22, 0xe4, 0x2d,
	0xb9, 0x2e, 0x11, 0xc5, 0x96, 0x8a, 0xec, 0xc3, 0x74, 0x87, 0xf5, 0x76, 0xaf, 0x45, 0x62, 0x11,
	0x16, 0x52, 0xae, 0x54, 0xe0, 0xdd, 0x98, 0x54, 0x68, 0xff, 0xec, 0xa4, 0x10, 0x8c, 0x75, 0x09,
	0x73, 0x35, 0xb1, 0xfc, 0x8f, 0xd6, 0x61, 0x42, 0x36, 0x34, 0xc3, 0x4b, 0xb5, 0x4a, 0xa3, 0xba,
	0x81, 0x9b, 0xb9, 0xcb, 0x20, 0x3a, 0xbe, 0xb9, 0x27, 0x00, 0xb6, 0xc6, 0xa1, 0x4d, 0x98, 0xa4,
	0x03, 0x2e, 0x43, 0x96, 0x65, 0xc8, 0x4a, 0x41, 0xc8, 0xa1, 0x44, 0xd8, 0x09, 0x12, 0xdd, 0x03,
	0x50, 0xe1, 0x47, 0x24, 0xe6, 0xf8, 0x6f, 0x19, 0xf7, 0x6f, 0xf3, 0xca, 0xbd, 0x53, 0x52, 0x3b,
	0x31, 0xb7, 0xa7, 0x15, 0x7c, 0x27, 0xe6, 0xe8, 0x3e, 0x54, 0x35, 0x8d, 0x0c, 0xfe, 0x47, 0x06,
	0xaf, 0x16, 0x04, 0x2b, 0x51, 0x11, 0x0d, 0x3a, 0x40, 0x84, 0x5f, 0x39, 0x57, 0x5c, 0xd0, 0xed,
	0x59, 0x90, 0x2b, 0xda, 0x7d, 0xa5, 0xa0, 0xdd, 0x77, 0x33, 0x20, 0x79, 0x90, 0x66, 0xcd, 0x68,
	0x54, 0x37, 0xfe, 0xcf, 0xa7, 0xa2, 0x9f, 0x8c, 0x67, 0x0e, 0xf3, 0x45, 0x54, 0x9b, 0x30, 0xf7,
	0x92, 0x47, 0x58, 0xa2, 0x0e, 0x8e, 0xb8, 0x32, 0xab, 0xaa, 0x0e, 0xe2, 0x3f, 0x7a, 0x04, 0x7f,
	0x45, 0x84, 0xd1, 0x41, 0xe4, 0x92, 0xa3, 0xbe, 0xe7, 0x7b, 0x9c, 0x61, 0x4b, 0x6e, 0xb4, 0x5e,
	0xc8, 0x6e, 0x6b, 0xec, 0x81, 0x80, 0xda, 0x73, 0x51, 0xd6, 0x64, 0xba, 0x4b, 0xda, 0xf9, 0x5e,
	0xff, 0x50, 0x01, 0x10, 0xed, 0x19, 0xf6, 0x22, 0xa7, 0x4b, 0x6e, 0xda, 0xe4, 0x8f, 0xb5, 0xc9,
	0xb5, 0x96, 0x72, 0x09, 0xd0, 0x65, 0xd1, 0xd2, 0x5a, 0x7e, 0x1b, 0x95, 0x37, 0x7e, 0x2f, 0x38,
	0xa1, 0xaf, 0x6e, 0x4a, 0xf9, 0x63, 0x29, 0x3b, 0xb0, 0x90, 0x56, 0x29, 0x22, 0xaf, 0x07, 0x84,
	0x71, 0x86, 0xb1, 0x24, 0xa9, 0x15, 0x66, 0x20, 0x4e, 0xd1, 0x56, 0x40, 0x7b, 0xde, 0x4d, 0x27,
	0x91, 0x8a, 0xd4, 0xb7, 0x29, 0x41, 0xa9, 0x0a, 0x6c, 0x7c, 0x19, 0x87, 0x4a, 0x87, 0xf5, 0xd0,
	0x29, 0x2c, 0x17, 0x8f, 0xfb, 0xbb, 0x05, 0x4a, 0x65, 0xf3, 0xdc, 0xdc, 0xfc, 0x0d, 0x70, 0x92,
	0x82, 0x90, 0x2e, 0x1e, 0xfc, 0x25, 0xd2, 0x85, 0xe0, 0x32, 0xe9, 0xa1, 0xc3, 0x19, 0xd9, 0x30,
	0x95, 0x4e, 0x66, 0xab, 0x98, 0x20, 0xf1, 0x9b, 0x77, 0x86, 0xfb, 0xf3, 0x9c, 0x7a, 0x10, 0x97,
	0x72, 0x2a, 0x7f, 0x39, 0x67, 0x7e, 0xf4, 0xa2, 0x03, 0x98, 0xd0, 0x73, 0x77, 0xb5, 0x38, 0x42,
	0x79, 0xcd, 0xb5, 0x61, 0xde, 0x2c, 0x9b, 0x9e, 0xb1, 0x25, 0x6c, 0xca, 0x5b, 0xc6, 0x96, 0x7f,
	0x8f, 0xd1, 0x21, 0x4c, 0x26, 0x6f, 0xf1, 0x7f, 0x25, 0xdb, 0x51, 0x6e, 0xf3, 0xf6, 0x50, 0x77,
	0x36, 0x3d, 0xfd, 0x20, 0x94, 0xa4, 0xa7, 0xbc, 0x65, 0xe9, 0xe5, 0x1b, 0xfc, 0xe1, 0x83, 0x4f,
	0xe7, 0x96, 0x71, 0x76, 0x6e, 0x19, 0x5f, 0xcf, 0x2d, 0xe3, 0xfd, 0x85, 0x35, 0x72, 0x76, 0x61,
	0x8d, 0x7c, 0xbe, 0xb0, 0x46, 0x9e, 0xaf, 0xf5, 0x3c, 0xfe, 0x72, 0x70, 0xdc, 0x74, 0xa9, 0xdf,
	0x4a, 0x99, 0x5a, 0xfe, 0x7a, 0x2b, 0x6e, 0xa9, 0xef, 0xea, 0xd3, 0x90, 0xb0, 0xe3, 0x09, 0xf9,
	0x45, 0xbc, 0xf9, 0x3d, 0x00, 0x00, 0xff, 0xff, 0xd1, 0xbc, 0xde, 0x88, 0x6c, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	ApproveDeployContract(ctx context.Context, in *MsgApproveDeployContract, opts ...grpc.CallOption) (*MsgApproveDeployContractResponse, error)
	ProposeDeployContract(ctx context.Context, in *MsgProposeDeployContract, opts ...grpc.CallOption) (*MsgProposeDeployContractResponse, error)
	Undeploy(ctx context.Context, in *MsgUndeploy, opts ...grpc.CallOption) (*MsgUndeployResponse, error)
	Unfreeze(ctx context.Context, in *MsgUnfreeze, opts ...grpc.CallOption) (*MsgUnfreezeResponse, error)
	Freeze(ctx context.Context, in *MsgFreeze, opts ...grpc.CallOption) (*MsgFreezeResponse, error)
	Deploy(ctx context.Context, in *MsgDeploy, opts ...grpc.CallOption) (*MsgDeployResponse, error)
	Upgrade(ctx context.Context, in *MsgUpgrade, opts ...grpc.CallOption) (*MsgUpgradeResponse, error)
	Invoke(ctx context.Context, in *MsgInvoke, opts ...grpc.CallOption) (*MsgInvokeResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) ApproveDeployContract(ctx context.Context, in *MsgApproveDeployContract, opts ...grpc.CallOption) (*MsgApproveDeployContractResponse, error) {
	out := new(MsgApproveDeployContractResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/ApproveDeployContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ProposeDeployContract(ctx context.Context, in *MsgProposeDeployContract, opts ...grpc.CallOption) (*MsgProposeDeployContractResponse, error) {
	out := new(MsgProposeDeployContractResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/ProposeDeployContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Undeploy(ctx context.Context, in *MsgUndeploy, opts ...grpc.CallOption) (*MsgUndeployResponse, error) {
	out := new(MsgUndeployResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/Undeploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Unfreeze(ctx context.Context, in *MsgUnfreeze, opts ...grpc.CallOption) (*MsgUnfreezeResponse, error) {
	out := new(MsgUnfreezeResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/Unfreeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Freeze(ctx context.Context, in *MsgFreeze, opts ...grpc.CallOption) (*MsgFreezeResponse, error) {
	out := new(MsgFreezeResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/Freeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Deploy(ctx context.Context, in *MsgDeploy, opts ...grpc.CallOption) (*MsgDeployResponse, error) {
	out := new(MsgDeployResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/Deploy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Upgrade(ctx context.Context, in *MsgUpgrade, opts ...grpc.CallOption) (*MsgUpgradeResponse, error) {
	out := new(MsgUpgradeResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/Upgrade", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Invoke(ctx context.Context, in *MsgInvoke, opts ...grpc.CallOption) (*MsgInvokeResponse, error) {
	out := new(MsgInvokeResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.wasm.Msg/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	ApproveDeployContract(context.Context, *MsgApproveDeployContract) (*MsgApproveDeployContractResponse, error)
	ProposeDeployContract(context.Context, *MsgProposeDeployContract) (*MsgProposeDeployContractResponse, error)
	Undeploy(context.Context, *MsgUndeploy) (*MsgUndeployResponse, error)
	Unfreeze(context.Context, *MsgUnfreeze) (*MsgUnfreezeResponse, error)
	Freeze(context.Context, *MsgFreeze) (*MsgFreezeResponse, error)
	Deploy(context.Context, *MsgDeploy) (*MsgDeployResponse, error)
	Upgrade(context.Context, *MsgUpgrade) (*MsgUpgradeResponse, error)
	Invoke(context.Context, *MsgInvoke) (*MsgInvokeResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) ApproveDeployContract(ctx context.Context, req *MsgApproveDeployContract) (*MsgApproveDeployContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ApproveDeployContract not implemented")
}
func (*UnimplementedMsgServer) ProposeDeployContract(ctx context.Context, req *MsgProposeDeployContract) (*MsgProposeDeployContractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProposeDeployContract not implemented")
}
func (*UnimplementedMsgServer) Undeploy(ctx context.Context, req *MsgUndeploy) (*MsgUndeployResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Undeploy not implemented")
}
func (*UnimplementedMsgServer) Unfreeze(ctx context.Context, req *MsgUnfreeze) (*MsgUnfreezeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unfreeze not implemented")
}
func (*UnimplementedMsgServer) Freeze(ctx context.Context, req *MsgFreeze) (*MsgFreezeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Freeze not implemented")
}
func (*UnimplementedMsgServer) Deploy(ctx context.Context, req *MsgDeploy) (*MsgDeployResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Deploy not implemented")
}
func (*UnimplementedMsgServer) Upgrade(ctx context.Context, req *MsgUpgrade) (*MsgUpgradeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Upgrade not implemented")
}
func (*UnimplementedMsgServer) Invoke(ctx context.Context, req *MsgInvoke) (*MsgInvokeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Invoke not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_ApproveDeployContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgApproveDeployContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ApproveDeployContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/ApproveDeployContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ApproveDeployContract(ctx, req.(*MsgApproveDeployContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ProposeDeployContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgProposeDeployContract)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ProposeDeployContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/ProposeDeployContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ProposeDeployContract(ctx, req.(*MsgProposeDeployContract))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Undeploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUndeploy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Undeploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/Undeploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Undeploy(ctx, req.(*MsgUndeploy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Unfreeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnfreeze)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Unfreeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/Unfreeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Unfreeze(ctx, req.(*MsgUnfreeze))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Freeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgFreeze)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Freeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/Freeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Freeze(ctx, req.(*MsgFreeze))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Deploy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeploy)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Deploy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/Deploy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Deploy(ctx, req.(*MsgDeploy))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Upgrade_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpgrade)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Upgrade(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/Upgrade",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Upgrade(ctx, req.(*MsgUpgrade))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInvoke)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.wasm.Msg/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Invoke(ctx, req.(*MsgInvoke))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "liubaninc.m0.wasm.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ApproveDeployContract",
			Handler:    _Msg_ApproveDeployContract_Handler,
		},
		{
			MethodName: "ProposeDeployContract",
			Handler:    _Msg_ProposeDeployContract_Handler,
		},
		{
			MethodName: "Undeploy",
			Handler:    _Msg_Undeploy_Handler,
		},
		{
			MethodName: "Unfreeze",
			Handler:    _Msg_Unfreeze_Handler,
		},
		{
			MethodName: "Freeze",
			Handler:    _Msg_Freeze_Handler,
		},
		{
			MethodName: "Deploy",
			Handler:    _Msg_Deploy_Handler,
		},
		{
			MethodName: "Upgrade",
			Handler:    _Msg_Upgrade_Handler,
		},
		{
			MethodName: "Invoke",
			Handler:    _Msg_Invoke_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wasm/tx.proto",
}

func (m *MsgApproveDeployContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveDeployContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveDeployContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Index) > 0 {
		i -= len(m.Index)
		copy(dAtA[i:], m.Index)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Index)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgApproveDeployContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgApproveDeployContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgApproveDeployContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgProposeDeployContract) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProposeDeployContract) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProposeDeployContract) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Approval) > 0 {
		for iNdEx := len(m.Approval) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Approval[iNdEx])
			copy(dAtA[i:], m.Approval[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Approval[iNdEx])))
			i--
			dAtA[i] = 0x2a
		}
	}
	if len(m.InitArgs) > 0 {
		i -= len(m.InitArgs)
		copy(dAtA[i:], m.InitArgs)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InitArgs)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ContractCode) > 0 {
		i -= len(m.ContractCode)
		copy(dAtA[i:], m.ContractCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractCode)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ContractName) > 0 {
		i -= len(m.ContractName)
		copy(dAtA[i:], m.ContractName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgProposeDeployContractResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgProposeDeployContractResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgProposeDeployContractResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUndeploy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndeploy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndeploy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractName) > 0 {
		i -= len(m.ContractName)
		copy(dAtA[i:], m.ContractName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUndeployResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUndeployResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUndeployResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnfreeze) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnfreeze) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnfreeze) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractName) > 0 {
		i -= len(m.ContractName)
		copy(dAtA[i:], m.ContractName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnfreezeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnfreezeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnfreezeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgFreeze) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFreeze) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFreeze) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractName) > 0 {
		i -= len(m.ContractName)
		copy(dAtA[i:], m.ContractName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractName)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgFreezeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgFreezeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgFreezeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeploy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeploy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeploy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourceLimits) > 0 {
		for iNdEx := len(m.ResourceLimits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResourceLimits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xf2
		}
	}
	if len(m.Args) > 0 {
		i -= len(m.Args)
		copy(dAtA[i:], m.Args)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Args)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xe2
	}
	if m.ContractDesc != nil {
		{
			size, err := m.ContractDesc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xd2
	}
	if len(m.ContractCode) > 0 {
		i -= len(m.ContractCode)
		copy(dAtA[i:], m.ContractCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractCode)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if len(m.ContractName) > 0 {
		i -= len(m.ContractName)
		copy(dAtA[i:], m.ContractName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.OutputsExt) > 0 {
		for iNdEx := len(m.OutputsExt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutputsExt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.InputsExt) > 0 {
		for iNdEx := len(m.InputsExt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InputsExt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.Outputs) > 0 {
		for iNdEx := len(m.Outputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Outputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Inputs) > 0 {
		for iNdEx := len(m.Inputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Inputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeployResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeployResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeployResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpgrade) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpgrade) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpgrade) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ResourceLimits) > 0 {
		for iNdEx := len(m.ResourceLimits) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ResourceLimits[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xf2
		}
	}
	if len(m.ContractCode) > 0 {
		i -= len(m.ContractCode)
		copy(dAtA[i:], m.ContractCode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractCode)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xca
	}
	if len(m.ContractName) > 0 {
		i -= len(m.ContractName)
		copy(dAtA[i:], m.ContractName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xc2
	}
	if len(m.OutputsExt) > 0 {
		for iNdEx := len(m.OutputsExt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutputsExt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.InputsExt) > 0 {
		for iNdEx := len(m.InputsExt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InputsExt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.Outputs) > 0 {
		for iNdEx := len(m.Outputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Outputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Inputs) > 0 {
		for iNdEx := len(m.Inputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Inputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpgradeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpgradeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpgradeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInvoke) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInvoke) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInvoke) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.ContractRequests) > 0 {
		for iNdEx := len(m.ContractRequests) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ContractRequests[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xc2
		}
	}
	if len(m.OutputsExt) > 0 {
		for iNdEx := len(m.OutputsExt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.OutputsExt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xba
		}
	}
	if len(m.InputsExt) > 0 {
		for iNdEx := len(m.InputsExt) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.InputsExt[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xb2
		}
	}
	if len(m.Outputs) > 0 {
		for iNdEx := len(m.Outputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Outputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xaa
		}
	}
	if len(m.Inputs) > 0 {
		for iNdEx := len(m.Inputs) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Inputs[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInvokeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInvokeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInvokeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgApproveDeployContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Index)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgApproveDeployContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgProposeDeployContract) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractCode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.InitArgs)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Approval) > 0 {
		for _, s := range m.Approval {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgProposeDeployContractResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUndeploy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUndeployResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnfreeze) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnfreezeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgFreeze) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgFreezeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeploy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Inputs) > 0 {
		for _, e := range m.Inputs {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.Outputs) > 0 {
		for _, e := range m.Outputs {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.InputsExt) > 0 {
		for _, e := range m.InputsExt {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.OutputsExt) > 0 {
		for _, e := range m.OutputsExt {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	l = len(m.ContractName)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.ContractCode)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	if m.ContractDesc != nil {
		l = m.ContractDesc.Size()
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.Args)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	if len(m.ResourceLimits) > 0 {
		for _, e := range m.ResourceLimits {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgDeployResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpgrade) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Inputs) > 0 {
		for _, e := range m.Inputs {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.Outputs) > 0 {
		for _, e := range m.Outputs {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.InputsExt) > 0 {
		for _, e := range m.InputsExt {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.OutputsExt) > 0 {
		for _, e := range m.OutputsExt {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	l = len(m.ContractName)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	l = len(m.ContractCode)
	if l > 0 {
		n += 2 + l + sovTx(uint64(l))
	}
	if len(m.ResourceLimits) > 0 {
		for _, e := range m.ResourceLimits {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpgradeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInvoke) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Inputs) > 0 {
		for _, e := range m.Inputs {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.Outputs) > 0 {
		for _, e := range m.Outputs {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.InputsExt) > 0 {
		for _, e := range m.InputsExt {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.OutputsExt) > 0 {
		for _, e := range m.OutputsExt {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	if len(m.ContractRequests) > 0 {
		for _, e := range m.ContractRequests {
			l = e.Size()
			n += 2 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgInvokeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgApproveDeployContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveDeployContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveDeployContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Index", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Index = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgApproveDeployContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgApproveDeployContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgApproveDeployContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProposeDeployContract) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProposeDeployContract: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProposeDeployContract: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractCode", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractCode = append(m.ContractCode[:0], dAtA[iNdEx:postIndex]...)
			if m.ContractCode == nil {
				m.ContractCode = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InitArgs", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InitArgs = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Approval", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Approval = append(m.Approval, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgProposeDeployContractResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgProposeDeployContractResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgProposeDeployContractResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndeploy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndeploy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndeploy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUndeployResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUndeployResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUndeployResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnfreeze) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnfreeze: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnfreeze: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnfreezeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnfreezeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnfreezeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFreeze) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFreeze: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFreeze: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgFreezeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgFreezeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgFreezeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeploy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeploy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeploy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inputs = append(m.Inputs, &types.Input{})
			if err := m.Inputs[len(m.Inputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Outputs = append(m.Outputs, &types.Output{})
			if err := m.Outputs[len(m.Outputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputsExt = append(m.InputsExt, &InputExt{})
			if err := m.InputsExt[len(m.InputsExt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputsExt = append(m.OutputsExt, &OutputExt{})
			if err := m.OutputsExt[len(m.OutputsExt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractCode", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractCode = append(m.ContractCode[:0], dAtA[iNdEx:postIndex]...)
			if m.ContractCode == nil {
				m.ContractCode = []byte{}
			}
			iNdEx = postIndex
		case 26:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractDesc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ContractDesc == nil {
				m.ContractDesc = &xmodel.WasmCodeDesc{}
			}
			if err := m.ContractDesc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 28:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Args", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Args = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceLimits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceLimits = append(m.ResourceLimits, &xmodel.ResourceLimit{})
			if err := m.ResourceLimits[len(m.ResourceLimits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeployResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeployResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeployResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpgrade) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpgrade: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpgrade: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inputs = append(m.Inputs, &types.Input{})
			if err := m.Inputs[len(m.Inputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Outputs = append(m.Outputs, &types.Output{})
			if err := m.Outputs[len(m.Outputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputsExt = append(m.InputsExt, &InputExt{})
			if err := m.InputsExt[len(m.InputsExt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputsExt = append(m.OutputsExt, &OutputExt{})
			if err := m.OutputsExt[len(m.OutputsExt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 25:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractCode", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractCode = append(m.ContractCode[:0], dAtA[iNdEx:postIndex]...)
			if m.ContractCode == nil {
				m.ContractCode = []byte{}
			}
			iNdEx = postIndex
		case 30:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResourceLimits", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ResourceLimits = append(m.ResourceLimits, &xmodel.ResourceLimit{})
			if err := m.ResourceLimits[len(m.ResourceLimits)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpgradeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpgradeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpgradeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInvoke) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInvoke: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInvoke: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inputs = append(m.Inputs, &types.Input{})
			if err := m.Inputs[len(m.Inputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Outputs", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Outputs = append(m.Outputs, &types.Output{})
			if err := m.Outputs[len(m.Outputs)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InputsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InputsExt = append(m.InputsExt, &InputExt{})
			if err := m.InputsExt[len(m.InputsExt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 23:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OutputsExt", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OutputsExt = append(m.OutputsExt, &OutputExt{})
			if err := m.OutputsExt[len(m.OutputsExt)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 24:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractRequests", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractRequests = append(m.ContractRequests, &InvokeRequest{})
			if err := m.ContractRequests[len(m.ContractRequests)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInvokeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInvokeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInvokeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
