syntax = "proto3";
option optimize_for = LITE_RUNTIME;
option go_package = "github.com/liubaninc/m0/x/wasm/xmodel/contractsdk/go/pbrpc";
option java_package = "com.tq_bc.m0.contractpb";

import "contract.proto";
package mchain.contract.svc;


// service provided by chain code, called by mchain
service NativeCode {
  rpc Call(mchain.contract.sdk.NativeCallRequest) returns (mchain.contract.sdk.NativeCallResponse);
  rpc Ping(mchain.contract.sdk.PingRequest) returns (mchain.contract.sdk.PingResponse);
}

// mchain syscall service
service Syscall {
  // KV service
  rpc PutObject(mchain.contract.sdk.PutRequest) returns (mchain.contract.sdk.PutResponse);
  rpc GetObject(mchain.contract.sdk.GetRequest) returns (mchain.contract.sdk.GetResponse);
  rpc DeleteObject(mchain.contract.sdk.DeleteRequest) returns (mchain.contract.sdk.DeleteResponse);
  rpc NewIterator(mchain.contract.sdk.IteratorRequest) returns (mchain.contract.sdk.IteratorResponse);

  // Chain service
  rpc QueryTx(mchain.contract.sdk.QueryTxRequest) returns (mchain.contract.sdk.QueryTxResponse);
  rpc QueryBlock(mchain.contract.sdk.QueryBlockRequest) returns (mchain.contract.sdk.QueryBlockResponse);
  rpc Transfer(mchain.contract.sdk.TransferRequest) returns (mchain.contract.sdk.TransferResponse);
  rpc ContractCall(mchain.contract.sdk.ContractCallRequest) returns (mchain.contract.sdk.ContractCallResponse);
//  rpc CrossContractQuery(mchain.contract.sdk.CrossContractQueryRequest) returns (mchain.contract.sdk.CrossContractQueryResponse);
//  rpc GetAccountAddresses(mchain.contract.sdk.GetAccountAddressesRequest) returns (mchain.contract.sdk.GetAccountAddressesResponse);

  // Heartbeat
  rpc Ping(mchain.contract.sdk.PingRequest) returns (mchain.contract.sdk.PingResponse);

  // Post log
  rpc PostLog(mchain.contract.sdk.PostLogRequest) returns (mchain.contract.sdk.PostLogResponse);

  rpc GetCallArgs(mchain.contract.sdk.GetCallArgsRequest) returns (mchain.contract.sdk.CallArgs);
  rpc SetOutput(mchain.contract.sdk.SetOutputRequest) returns (mchain.contract.sdk.SetOutputResponse);

  // Send Event
  rpc EmitEvent(mchain.contract.sdk.EmitEventRequest) returns (mchain.contract.sdk.EmitEventResponse);
} 

