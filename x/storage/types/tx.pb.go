// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: storage/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateRecryptAccount struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Pubkey  string `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
}

func (m *MsgCreateRecryptAccount) Reset()         { *m = MsgCreateRecryptAccount{} }
func (m *MsgCreateRecryptAccount) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRecryptAccount) ProtoMessage()    {}
func (*MsgCreateRecryptAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eee4bbfcbb21e1, []int{0}
}
func (m *MsgCreateRecryptAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRecryptAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRecryptAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRecryptAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRecryptAccount.Merge(m, src)
}
func (m *MsgCreateRecryptAccount) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRecryptAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRecryptAccount.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRecryptAccount proto.InternalMessageInfo

func (m *MsgCreateRecryptAccount) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRecryptAccount) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type MsgCreateRecryptAccountResponse struct {
}

func (m *MsgCreateRecryptAccountResponse) Reset()         { *m = MsgCreateRecryptAccountResponse{} }
func (m *MsgCreateRecryptAccountResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRecryptAccountResponse) ProtoMessage()    {}
func (*MsgCreateRecryptAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eee4bbfcbb21e1, []int{1}
}
func (m *MsgCreateRecryptAccountResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRecryptAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRecryptAccountResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRecryptAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRecryptAccountResponse.Merge(m, src)
}
func (m *MsgCreateRecryptAccountResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRecryptAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRecryptAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRecryptAccountResponse proto.InternalMessageInfo

type MsgCreateShareEncryptStorage struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	ShareKey string `protobuf:"bytes,3,opt,name=shareKey,proto3" json:"shareKey,omitempty"`
	Envelope string `protobuf:"bytes,4,opt,name=envelope,proto3" json:"envelope,omitempty"`
	Sharer   string `protobuf:"bytes,5,opt,name=sharer,proto3" json:"sharer,omitempty"`
}

func (m *MsgCreateShareEncryptStorage) Reset()         { *m = MsgCreateShareEncryptStorage{} }
func (m *MsgCreateShareEncryptStorage) String() string { return proto.CompactTextString(m) }
func (*MsgCreateShareEncryptStorage) ProtoMessage()    {}
func (*MsgCreateShareEncryptStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eee4bbfcbb21e1, []int{2}
}
func (m *MsgCreateShareEncryptStorage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateShareEncryptStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateShareEncryptStorage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateShareEncryptStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateShareEncryptStorage.Merge(m, src)
}
func (m *MsgCreateShareEncryptStorage) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateShareEncryptStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateShareEncryptStorage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateShareEncryptStorage proto.InternalMessageInfo

func (m *MsgCreateShareEncryptStorage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateShareEncryptStorage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MsgCreateShareEncryptStorage) GetShareKey() string {
	if m != nil {
		return m.ShareKey
	}
	return ""
}

func (m *MsgCreateShareEncryptStorage) GetEnvelope() string {
	if m != nil {
		return m.Envelope
	}
	return ""
}

func (m *MsgCreateShareEncryptStorage) GetSharer() string {
	if m != nil {
		return m.Sharer
	}
	return ""
}

type MsgCreateShareEncryptStorageResponse struct {
}

func (m *MsgCreateShareEncryptStorageResponse) Reset()         { *m = MsgCreateShareEncryptStorageResponse{} }
func (m *MsgCreateShareEncryptStorageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateShareEncryptStorageResponse) ProtoMessage()    {}
func (*MsgCreateShareEncryptStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eee4bbfcbb21e1, []int{3}
}
func (m *MsgCreateShareEncryptStorageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateShareEncryptStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateShareEncryptStorageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateShareEncryptStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateShareEncryptStorageResponse.Merge(m, src)
}
func (m *MsgCreateShareEncryptStorageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateShareEncryptStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateShareEncryptStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateShareEncryptStorageResponse proto.InternalMessageInfo

type MsgCreateEncryptStorage struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Md5       string `protobuf:"bytes,3,opt,name=md5,proto3" json:"md5,omitempty"`
	Encrypted string `protobuf:"bytes,4,opt,name=encrypted,proto3" json:"encrypted,omitempty"`
	Envelope  string `protobuf:"bytes,5,opt,name=envelope,proto3" json:"envelope,omitempty"`
}

func (m *MsgCreateEncryptStorage) Reset()         { *m = MsgCreateEncryptStorage{} }
func (m *MsgCreateEncryptStorage) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEncryptStorage) ProtoMessage()    {}
func (*MsgCreateEncryptStorage) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eee4bbfcbb21e1, []int{4}
}
func (m *MsgCreateEncryptStorage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEncryptStorage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEncryptStorage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEncryptStorage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEncryptStorage.Merge(m, src)
}
func (m *MsgCreateEncryptStorage) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEncryptStorage) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEncryptStorage.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEncryptStorage proto.InternalMessageInfo

func (m *MsgCreateEncryptStorage) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateEncryptStorage) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *MsgCreateEncryptStorage) GetMd5() string {
	if m != nil {
		return m.Md5
	}
	return ""
}

func (m *MsgCreateEncryptStorage) GetEncrypted() string {
	if m != nil {
		return m.Encrypted
	}
	return ""
}

func (m *MsgCreateEncryptStorage) GetEnvelope() string {
	if m != nil {
		return m.Envelope
	}
	return ""
}

type MsgCreateEncryptStorageResponse struct {
}

func (m *MsgCreateEncryptStorageResponse) Reset()         { *m = MsgCreateEncryptStorageResponse{} }
func (m *MsgCreateEncryptStorageResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateEncryptStorageResponse) ProtoMessage()    {}
func (*MsgCreateEncryptStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_85eee4bbfcbb21e1, []int{5}
}
func (m *MsgCreateEncryptStorageResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateEncryptStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateEncryptStorageResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateEncryptStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateEncryptStorageResponse.Merge(m, src)
}
func (m *MsgCreateEncryptStorageResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateEncryptStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateEncryptStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateEncryptStorageResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateRecryptAccount)(nil), "liubaninc.m0.storage.MsgCreateRecryptAccount")
	proto.RegisterType((*MsgCreateRecryptAccountResponse)(nil), "liubaninc.m0.storage.MsgCreateRecryptAccountResponse")
	proto.RegisterType((*MsgCreateShareEncryptStorage)(nil), "liubaninc.m0.storage.MsgCreateShareEncryptStorage")
	proto.RegisterType((*MsgCreateShareEncryptStorageResponse)(nil), "liubaninc.m0.storage.MsgCreateShareEncryptStorageResponse")
	proto.RegisterType((*MsgCreateEncryptStorage)(nil), "liubaninc.m0.storage.MsgCreateEncryptStorage")
	proto.RegisterType((*MsgCreateEncryptStorageResponse)(nil), "liubaninc.m0.storage.MsgCreateEncryptStorageResponse")
}

func init() { proto.RegisterFile("storage/tx.proto", fileDescriptor_85eee4bbfcbb21e1) }

var fileDescriptor_85eee4bbfcbb21e1 = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4d, 0x4f, 0xf2, 0x40,
	0x10, 0xc7, 0xd9, 0xa7, 0x0f, 0x28, 0x73, 0x22, 0x0d, 0xd1, 0x4a, 0x48, 0xd5, 0xc6, 0xa8, 0x17,
	0x5b, 0x82, 0xe1, 0xe2, 0x0d, 0x8d, 0x27, 0xc2, 0x05, 0x6e, 0xde, 0xda, 0x32, 0x29, 0x44, 0xda,
	0x6d, 0xda, 0xad, 0xa1, 0x89, 0xdf, 0xc0, 0x83, 0x7a, 0xf5, 0x13, 0x79, 0xe4, 0xe8, 0xd1, 0xc0,
	0x17, 0x31, 0x7d, 0x5b, 0x84, 0x14, 0x08, 0xf1, 0xb6, 0xf3, 0xb2, 0xff, 0xf9, 0xcd, 0xcc, 0x2e,
	0x54, 0x7c, 0x46, 0x3d, 0xdd, 0x42, 0x8d, 0x4d, 0x54, 0xd7, 0xa3, 0x8c, 0x8a, 0xd5, 0xf1, 0x28,
	0x30, 0x74, 0x67, 0xe4, 0x98, 0xaa, 0xdd, 0x50, 0xd3, 0xb0, 0xd2, 0x81, 0xc3, 0xae, 0x6f, 0xdd,
	0x79, 0xa8, 0x33, 0xec, 0xa1, 0xe9, 0x85, 0x2e, 0x6b, 0x9b, 0x26, 0x0d, 0x1c, 0x26, 0x4a, 0xb0,
	0x67, 0x46, 0x7e, 0xea, 0x49, 0xe4, 0x84, 0x5c, 0x96, 0x7b, 0x99, 0x29, 0x1e, 0x40, 0xc9, 0x0d,
	0x8c, 0x47, 0x0c, 0xa5, 0x7f, 0x71, 0x20, 0xb5, 0x94, 0x53, 0x38, 0x5e, 0x23, 0xd6, 0x43, 0xdf,
	0xa5, 0x8e, 0x8f, 0xca, 0x07, 0x81, 0x3a, 0xcf, 0xe9, 0x0f, 0x75, 0x0f, 0xef, 0x9d, 0x38, 0xb1,
	0x9f, 0x00, 0x6d, 0xa8, 0x5a, 0x01, 0x61, 0x51, 0x32, 0x3a, 0x8a, 0x35, 0xd8, 0xf7, 0x23, 0x89,
	0x0e, 0x86, 0x92, 0x10, 0xbb, 0xb9, 0x1d, 0xc5, 0xd0, 0x79, 0xc2, 0x31, 0x75, 0x51, 0xfa, 0x9f,
	0xc4, 0x32, 0x3b, 0xe2, 0x8f, 0xf3, 0x3c, 0xa9, 0x98, 0xf0, 0x27, 0x96, 0x72, 0x0e, 0x67, 0x9b,
	0xd8, 0x78, 0x13, 0xef, 0xe4, 0xd7, 0xd4, 0xfe, 0xc0, 0x5f, 0x01, 0xc1, 0x1e, 0xb4, 0x52, 0xf4,
	0xe8, 0x28, 0xd6, 0xa1, 0x8c, 0x89, 0x1e, 0x0e, 0x52, 0xec, 0x85, 0x63, 0xa9, 0xa7, 0xe2, 0x72,
	0x4f, 0x4b, 0xb3, 0xcf, 0xc7, 0x6e, 0xbe, 0x0a, 0x20, 0x74, 0x7d, 0x4b, 0x7c, 0x86, 0x6a, 0xee,
	0xc2, 0xaf, 0xd4, 0xbc, 0x27, 0xa2, 0xae, 0x59, 0x69, 0xad, 0xb5, 0x53, 0x7a, 0x46, 0x21, 0xbe,
	0x10, 0x38, 0x5a, 0xbf, 0xfe, 0xe6, 0x16, 0xd1, 0x9c, 0x3b, 0xb5, 0x9b, 0xdd, 0xef, 0x70, 0x1a,
	0x3e, 0x8b, 0x15, 0x8e, 0x6d, 0xb3, 0x58, 0x41, 0x68, 0xed, 0x94, 0x9e, 0x55, 0xbf, 0x6d, 0x7f,
	0xce, 0x64, 0x32, 0x9d, 0xc9, 0xe4, 0x7b, 0x26, 0x93, 0xb7, 0xb9, 0x5c, 0x98, 0xce, 0xe5, 0xc2,
	0xd7, 0x5c, 0x2e, 0x3c, 0x5c, 0x58, 0x23, 0x36, 0x0c, 0x0c, 0xd5, 0xa4, 0xb6, 0xc6, 0xa5, 0x35,
	0xbb, 0xa1, 0x4d, 0x34, 0xfe, 0xb3, 0x43, 0x17, 0x7d, 0xa3, 0x14, 0xff, 0xee, 0xeb, 0x9f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xfb, 0xe5, 0xff, 0xec, 0xf1, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateRecryptAccount(ctx context.Context, in *MsgCreateRecryptAccount, opts ...grpc.CallOption) (*MsgCreateRecryptAccountResponse, error)
	CreateShareEncryptStorage(ctx context.Context, in *MsgCreateShareEncryptStorage, opts ...grpc.CallOption) (*MsgCreateShareEncryptStorageResponse, error)
	CreateEncryptStorage(ctx context.Context, in *MsgCreateEncryptStorage, opts ...grpc.CallOption) (*MsgCreateEncryptStorageResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateRecryptAccount(ctx context.Context, in *MsgCreateRecryptAccount, opts ...grpc.CallOption) (*MsgCreateRecryptAccountResponse, error) {
	out := new(MsgCreateRecryptAccountResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.storage.Msg/CreateRecryptAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateShareEncryptStorage(ctx context.Context, in *MsgCreateShareEncryptStorage, opts ...grpc.CallOption) (*MsgCreateShareEncryptStorageResponse, error) {
	out := new(MsgCreateShareEncryptStorageResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.storage.Msg/CreateShareEncryptStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateEncryptStorage(ctx context.Context, in *MsgCreateEncryptStorage, opts ...grpc.CallOption) (*MsgCreateEncryptStorageResponse, error) {
	out := new(MsgCreateEncryptStorageResponse)
	err := c.cc.Invoke(ctx, "/liubaninc.m0.storage.Msg/CreateEncryptStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	CreateRecryptAccount(context.Context, *MsgCreateRecryptAccount) (*MsgCreateRecryptAccountResponse, error)
	CreateShareEncryptStorage(context.Context, *MsgCreateShareEncryptStorage) (*MsgCreateShareEncryptStorageResponse, error)
	CreateEncryptStorage(context.Context, *MsgCreateEncryptStorage) (*MsgCreateEncryptStorageResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateRecryptAccount(ctx context.Context, req *MsgCreateRecryptAccount) (*MsgCreateRecryptAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRecryptAccount not implemented")
}
func (*UnimplementedMsgServer) CreateShareEncryptStorage(ctx context.Context, req *MsgCreateShareEncryptStorage) (*MsgCreateShareEncryptStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShareEncryptStorage not implemented")
}
func (*UnimplementedMsgServer) CreateEncryptStorage(ctx context.Context, req *MsgCreateEncryptStorage) (*MsgCreateEncryptStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEncryptStorage not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateRecryptAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRecryptAccount)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRecryptAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.storage.Msg/CreateRecryptAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRecryptAccount(ctx, req.(*MsgCreateRecryptAccount))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateShareEncryptStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateShareEncryptStorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateShareEncryptStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.storage.Msg/CreateShareEncryptStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateShareEncryptStorage(ctx, req.(*MsgCreateShareEncryptStorage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateEncryptStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateEncryptStorage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateEncryptStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/liubaninc.m0.storage.Msg/CreateEncryptStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateEncryptStorage(ctx, req.(*MsgCreateEncryptStorage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "liubaninc.m0.storage.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRecryptAccount",
			Handler:    _Msg_CreateRecryptAccount_Handler,
		},
		{
			MethodName: "CreateShareEncryptStorage",
			Handler:    _Msg_CreateShareEncryptStorage_Handler,
		},
		{
			MethodName: "CreateEncryptStorage",
			Handler:    _Msg_CreateEncryptStorage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage/tx.proto",
}

func (m *MsgCreateRecryptAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRecryptAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRecryptAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Pubkey) > 0 {
		i -= len(m.Pubkey)
		copy(dAtA[i:], m.Pubkey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Pubkey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRecryptAccountResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRecryptAccountResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRecryptAccountResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateShareEncryptStorage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateShareEncryptStorage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateShareEncryptStorage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sharer) > 0 {
		i -= len(m.Sharer)
		copy(dAtA[i:], m.Sharer)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sharer)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Envelope) > 0 {
		i -= len(m.Envelope)
		copy(dAtA[i:], m.Envelope)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Envelope)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ShareKey) > 0 {
		i -= len(m.ShareKey)
		copy(dAtA[i:], m.ShareKey)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ShareKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateShareEncryptStorageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateShareEncryptStorageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateShareEncryptStorageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateEncryptStorage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEncryptStorage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEncryptStorage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Envelope) > 0 {
		i -= len(m.Envelope)
		copy(dAtA[i:], m.Envelope)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Envelope)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Encrypted) > 0 {
		i -= len(m.Encrypted)
		copy(dAtA[i:], m.Encrypted)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Encrypted)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Md5) > 0 {
		i -= len(m.Md5)
		copy(dAtA[i:], m.Md5)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Md5)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateEncryptStorageResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateEncryptStorageResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateEncryptStorageResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateRecryptAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Pubkey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateRecryptAccountResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateShareEncryptStorage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ShareKey)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Envelope)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sharer)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateShareEncryptStorageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateEncryptStorage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Md5)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Encrypted)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Envelope)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateEncryptStorageResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateRecryptAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRecryptAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRecryptAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pubkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pubkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRecryptAccountResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRecryptAccountResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRecryptAccountResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateShareEncryptStorage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateShareEncryptStorage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateShareEncryptStorage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ShareKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ShareKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Envelope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Envelope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sharer", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sharer = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateShareEncryptStorageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateShareEncryptStorageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateShareEncryptStorageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEncryptStorage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEncryptStorage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEncryptStorage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Md5", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Md5 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Encrypted", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Encrypted = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Envelope", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Envelope = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateEncryptStorageResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateEncryptStorageResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateEncryptStorageResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
